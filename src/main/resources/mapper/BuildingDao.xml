<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.back_students_choose_lodge.dao.BuildingDao">

    <resultMap type="com.back_students_choose_lodge.entity.Building" id="BuildingMap">
        <result property="buildingId" column="building_id" jdbcType="INTEGER"/>
        <result property="buildingName" column="building_name" jdbcType="VARCHAR"/>
        <result property="buildingFloor" column="building_floor" jdbcType="INTEGER"/>
        <result property="buildingRoomSum" column="building_room_sum" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
    </resultMap>


    <!--新增所有列-->
    <insert id="insert" keyProperty="buildingId" useGeneratedKeys="true">
        insert into students_choose_lodge_database.building(building_name, building_floor, building_room_sum, sex)
        values (#{buildingName}, #{buildingFloor}, #{buildingRoomSum}, #{sex})
    </insert>

     <!--查询最新一条的的宿舍楼信息-->
    <select id="queryLastInfo" resultMap="BuildingMap">
        select building_id,
               building_name,
               building_floor,
               building_room_sum,
               sex
        from students_choose_lodge_database.building
        where building_id = (select max(building_id) from students_choose_lodge_database.building)
    </select>

    <!--通过楼名删除-->
    <delete id="deleteByBuildingId">
        delete
        from students_choose_lodge_database.building
        where building_id = #{buildingId}
    </delete>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BuildingMap">
        select
        building_id, building_name, building_floor, building_room_sum, sex
        from students_choose_lodge_database.building
        <where>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and building_name = #{buildingName}
            </if>
            <if test="buildingFloor != null">
                and building_floor = #{buildingFloor}
            </if>
            <if test="buildingRoomSum != null">
                and building_room_sum = #{buildingRoomSum}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
        </where>
    </select>

<!--    ～～～～～～～～～～～分界线～～～～～～～～～～～～～～～ -->

    <!--查询单个-->
    <select id="queryById" resultMap="BuildingMap">
        select building_id,
               building_name,
               building_floor,
               building_room_sum,
               sex
        from students_choose_lodge_database.building
        where building_id = #{buildingId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BuildingMap">
        select building_id,
               building_name,
               building_floor,
               building_room_sum,
               sex
        from students_choose_lodge_database.building limit #{offset}, #{limit}
    </select>





    <insert id="insertBatch" keyProperty="buildingId" useGeneratedKeys="true">
        insert into students_choose_lodge_database.building(building_name, building_floor, building_room_sum, sex)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.buildingName}, #{entity.buildingFloor}, #{entity.buildingRoomSum}, #{entity.sex})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="buildingId" useGeneratedKeys="true">
        insert into students_choose_lodge_database.building(building_name, building_floor, building_room_sum, sex)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.buildingName}, #{entity.buildingFloor}, #{entity.buildingRoomSum}, #{entity.sex})
        </foreach>
        on duplicate key update
        building_name = values(building_name) , building_floor = values(building_floor) , building_room_sum =
        values(building_room_sum) , sex = values(sex)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update students_choose_lodge_database.building
        <set>
            <if test="buildingName != null and buildingName != ''">
                building_name = #{buildingName},
            </if>
            <if test="buildingFloor != null">
                building_floor = #{buildingFloor},
            </if>
            <if test="buildingRoomSum != null">
                building_room_sum = #{buildingRoomSum},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
        </set>
        where building_id = #{buildingId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from students_choose_lodge_database.building
        where building_id = #{buildingId}
    </delete>

</mapper>

